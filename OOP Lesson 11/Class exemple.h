#pragma once


#include <vector>

//Вводная по шаблонам 
// Шаблоны могут быть:
// классы
// функции
// преопределение типов 
// статический метод класса
// метод класс
//  Исключения: Конструкторы 
// Определение - шаблоны  должны быть в одном файле

class MyClass {
public:
	template<typename Type> 
	void f00(Type a);
	// будет пытаться встраиватья изза определения 

	void f02(){}
	// будет пытаться встраиваться изза места определения 

	void f03();
	// потерял возможность встраивться


	static int getCount();
	static std::vector <int> vectName;


private:
	int a;
	int b;
	static int count; // Будет работать и без инициалиции 
	static const int g_rgav {10};
	
};

extern int g;

// 0
// service
// programm
// brs - Строго определяем что попадёт в них. Имеет время жизни равную жизни программы.
// bss - Строго определяем что попадёт в них. Имеет время жизни равную жизни программы.
// heap - Функции new и тд. Связаные с памятью программы 
// stack - область работы с функцией. Взаимодействует плотно с программой.
// args

template<typename Type>
inline void MyClass::f00(Type a)
{
}
